% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/code_agreements.R
\name{code_states}
\alias{code_states}
\title{Code States and Agreement Parties}
\usage{
code_states(v, abbrev = FALSE, parties = FALSE, activity = FALSE)
}
\arguments{
\item{v}{A character vector containing names of states to translate
into English or abbreviated, or treaty titles if parties are to be coded.}

\item{abbrev}{Do you want 3 letter country abbreviations to be returned?
By default FALSE.}

\item{parties}{Do you want to identify the parties of an agreement instead?
By default FALSE.}

\item{activity}{Do you want the activity of treaty to be coded?
By default, FALSE.}
}
\value{
A character vector of parties
that are mentioned in the treaty title
}
\description{
Retrieves countries from a character vector or
identifies the countries that are part of an agreement.
}
\details{
This function builds upon the \code{stat_actor} list and the
\code{countrycode} package to identify and return the parties mentioned
in a character vector of agreement titles or texts.
If the function is ran without an argument (i.e. \code{code_states()}),
a complete list of states' names and abbreviations is returned.
The function codes states parties to bilateral treaties
from the treaty title (please enter in v) if parties is TRUE.
The function also returns the "activity" for bilateral
treaties coded, if activity is TRUE.
Bilateral agreements usually detail their
activity and specify area in the last words of the titles.
These last words are abbreviated by the function (captured in [])
to differentiate between bilateral treaties and
avoid false positives being generated
since multiple, different, bilateral treaties may be signed on the same day.
}
\examples{
states <- c("Two are from Switzerland", "One from New Zealand",
"And one from Brazil")
code_states(states)
code_states(states, abbrev = TRUE)
\donttest{
IEADB <- dplyr::slice_sample(manyenviron::agreements$IEADB, n = 10)
code_states(IEADB$Title, parties = TRUE, activity = TRUE)
}
}
